if (hookfunction) then
    hookfunction(hookfunction, function()
        return
    end)
    function train(ability)
        local args = { [1] = ability } -- dur,agi,str,nen
        game:GetService("ReplicatedStorage").Remotes.train:FireServer(unpack(args))
    end

    function multiPly(ability)
        -- Script generated by SimpleSpy - credits to exx#9394

        local args = {
            [1] = ability
        }

        game:GetService("ReplicatedStorage").Remotes.multi:InvokeServer(unpack(args))

    end

    function tweenTO(pos)
        tweenService, tweenInfo = game:GetService("TweenService"), TweenInfo.new(3, Enum.EasingStyle.Linear)
        tweenService:Create(game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart, tweenInfo,
            { CFrame = CFrame.new(pos) }):Play()
    end

    local LeaderBoard = game:GetService("Workspace").Yorknew["Meshes/PolygonCity_Env_SM_Env_Sidewalk_Straight_02"].Position
    getgenv().AutoDur = false
    getgenv().AutoAgi = false
    getgenv().AutoStr = false
    getgenv().AutoNen = false
    getgenv().AutoMultStr = false
    getgenv().AutoMultAgi = false
    getgenv().AutoMultDur = false
    getgenv().AutoMultNen = false
    local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/destylol/4LD/itachi/ui", true))()
    local Project = Library.Project()
    local h = Project:Tab({
        Text = "Autofarms"
    })
    local Home = h:Section({
        Text = "Main"
    })
    local Home2 = h:Section({
        Text = "Settings"
    })
    local h1 = Project:Tab({
        Text = "Teleports"
    })
    local Home1 = h1:Section({
        Text = "Tps"
    })
    local h69 = Project:Tab({
        Text = "Player"
    })
    local Home69 = h69:Section({
        Text = "Player"
    })
    local crs = Project:Tab({
        Text = "Credits"
    })
    local CR = crs:Section({
        Text = "Credits"
    })
    Home69:Toggle({
        Text ="Antiafk",
        Default = true,
        Callback = function(v)
            local d = false
            if v == true then
                d = true
            else
                d = false
            end
            while d do
                local am = game:GetService("VirtualUser")
                game:GetService("Players").LocalPlayer.Idled:connect(
                    function()
                        am:CaptureController()
                        am:ClickButton2(Vector2.new())
                    end
                )
                wait()
            end
        end
    })
    Home69:Slider({
        Text = "Hipheight",
        Min = 0,
        Max = 500,
        Default = 3,
        Callback = function (v)
            game.Players.LocalPlayer.Character.Humanoid.HipHeight = v
            
        end
    })
    Home69:Button({
        Text = "Reset",
        Callback = function ()
            for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                if v:IsA("Part") or v:IsA("MeshPart") or v:IsA("Accessory") then
                    v:Destroy()
                end
            end
        end
    })
    CR:Button({
        Text = "SoloDev#7416",
        Callback = function ()
            setclipboard("discord.gg/software")
        end
    })
     CR:Button({
        Text = "discord.gg/software",
        Callback = function ()
            setclipboard("discord.gg/software")
        end
    })
    local d = {}
    local plrTable = {}
    for _, v in pairs(game:GetService("Workspace").Zones:GetChildren()) do
        if v:IsA("Part") then
            table.insert(d, tostring(v.Name))
        end
    end
    for _, v in pairs(game.Players:GetPlayers()) do
        if v.Name ~= game.Players.LocalPlayer.Name then
            table.insert(plrTable, v.Name)
        end
    end
    local to_tp = nil
    local PlayerToTeleportTO = nil
    Home1:Dropdown({
        Text = "Zones",
        Items = d,
        Callback = function(v)
            to_tp = game:GetService("Workspace").Zones[v].Position
        end
    })
    Home1:Dropdown({
        Text = "Players",
        Items = plrTable,
        Callback = function(v)
            PlayerToTeleportTO = v
        end
    })
    Home1:Button({
        Text = "Teleport to Zone",
        Callback = function()
            tweenTO(to_tp)
        end
    })
    Home1:Button({
        Text = "Teleport to Player",
        Callback = function()
            tweenTO(game.Players[PlayerToTeleportTO].Character.Head.Position + Vector3.new(0, -2, 0))
        end
    })
    --// Autofarms
    Home2:Dropdown({
        Text = "Autofarm at: ",
        Items = { "Current pos", "GYM", "Mystical Willow Tree", "Icy Lake", "Nostrade Garden", "Arm Wrestling",
            "Running Path", "Misly Wetlands", "Trick Tower", "Zevil Island" },
        Callback = function(v)
            if v == "GYM" then
                tweenTO(game:GetService("Workspace")["[GYM] Pilates reformer"].MeshPart.Position + Vector3.new(0, -5, 0))
            elseif v == "Mystical Willow Tree" then
                tweenService, tweenInfo = game:GetService("TweenService"), TweenInfo.new(3, Enum.EasingStyle.Linear)
                tweenService:Create(game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart, tweenInfo,
                    { CFrame = CFrame.new(-10.239452362060547, 13.224838256835938, -877.8238525390625) }):Play()
            elseif v == "Icy Lake" then
                tweenService, tweenInfo = game:GetService("TweenService"), TweenInfo.new(3, Enum.EasingStyle.Linear)
                tweenService:Create(game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart, tweenInfo,
                    { CFrame = CFrame.new(463.02069091796875, 2.1957590579986572, -578.3917846679688) }):Play()
            elseif v == "Nostrade Garden" then
                tweenService, tweenInfo = game:GetService("TweenService"), TweenInfo.new(3, Enum.EasingStyle.Linear)
                tweenService:Create(game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart, tweenInfo,
                    { CFrame = CFrame.new(15.479951858520508, 13.223213195800781, -1263.46484375) }):Play()
            elseif v == "Arm Wrestling" then
                tweenService, tweenInfo = game:GetService("TweenService"), TweenInfo.new(3, Enum.EasingStyle.Linear)
                tweenService:Create(game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart, tweenInfo,
                    { CFrame = CFrame.new(-209.55935668945312, 13.435508728027344, -1074.980224609375) }):Play()
            elseif v == "Running Path" then
                tweenService, tweenInfo = game:GetService("TweenService"), TweenInfo.new(3, Enum.EasingStyle.Linear)
                tweenService:Create(game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart, tweenInfo,
                    { CFrame = CFrame.new(-150.47071838378906, 13.224841117858887, -604.0376586914062) }):Play()
            elseif v == "Misly Wetlands" then
                tweenService, tweenInfo = game:GetService("TweenService"), TweenInfo.new(3, Enum.EasingStyle.Linear)
                tweenService:Create(game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart, tweenInfo,
                    { CFrame = CFrame.new(743.4039916992188, 10.503889083862305, 760.1152954101562) }):Play()
            elseif v == "Trick Tower" then
                tweenService, tweenInfo = game:GetService("TweenService"), TweenInfo.new(3, Enum.EasingStyle.Linear)
                tweenService:Create(game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart, tweenInfo,
                    { CFrame = CFrame.new(1147.308349609375, 10.993693351745605, 756.8707885742188) }):Play()
            elseif v == "Zevil Island" then
                tweenService, tweenInfo = game:GetService("TweenService"), TweenInfo.new(3, Enum.EasingStyle.Linear)
                tweenService:Create(game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart, tweenInfo,
                    { CFrame = CFrame.new(1128.42138671875, 10.012173652648926, 416.05181884765625) }):Play()
            end
        end
    })
    Home:Toggle({
        Text = "Autofarm Durability",
        Default = false,
        Callback = function(state)
            if state then
                getgenv().AutoDur = true
            else
                getgenv().AutoDur = false
            end
            while getgenv().AutoDur do
                wait(0.5)
                train("dur")
            end

        end
    })
    Home:Toggle({
        Text = "Autofarm Agility",
        Default = false,
        Callback = function(state)
            if state then
                getgenv().AutoAgi = true
            else
                getgenv().AutoAgi = false
            end
            while getgenv().AutoAgi do
                wait(0.5)
                train("agi")
            end
        end
    })
    Home:Toggle({
        Text = "Autofarm Strength",
        Default = false,
        Callback = function(state)
            if state then
                getgenv().AutoStr = true
            else
                getgenv().AutoStr = false
            end
            while getgenv().AutoStr do
                wait(0.5)
                train("str")
            end

        end
    })
    Home:Toggle({
        Text = "Autofarm Nen",
        Default = false,
        Callback = function(state)
            if state then
                getgenv().AutoNen = true
            else
                getgenv().AutoNen = false
            end
            while getgenv().AutoNen do
                wait(0.5)
                train("nen")
            end

        end
    })
    local wait_time = 5
    Home2:Slider({
        Text = "Wait time between Automultiply",
        Min = 5,
        Max = 60,
        Default = 5,
        Callback = function(v)
            wait_time = v
        end
    })
    Home:Toggle({
        Text = "Automultiply Strength",
        Default = false,
        Callback = function(state)
            if state then
                getgenv().AutoMultStr = true
            else
                getgenv().AutoMultStr = false
            end
            while getgenv().AutoMultStr do
                wait(wait_time)
                multiPly("str")
            end
        end
    })
    Home:Toggle({
        Text = "Automultiply Duration",
        Default = false,
        Callback = function(state)
            if state then
                getgenv().AutoMultDur = true
            else
                getgenv().AutoMultDur = false
            end
            while getgenv().AutoMultDur do
                wait(wait_time)
                multiPly("dur")
            end
        end
    })
    Home:Toggle({
        Text = "Automultiply Agility",
        Default = false,
        Callback = function(state)
            if state then
                getgenv().AutoMultAgi = true
            else
                getgenv().AutoMultAgi = false
            end
            while getgenv().AutoMultAgi do
                wait(wait_time)
                multiPly("agi")
            end
        end
    })
    Home:Toggle({
        Text = "Automultiply Nen",
        Default = false,
        Callback = function(state)
            if state then
                getgenv().AutoMultNen = true
            else
                getgenv().AutoMultNen = false
            end
            while getgenv().AutoMultNen do
                wait(wait_time)
                multiPly("nen")
            end
        end
    })
else
    warn("Executor not supported")
end
